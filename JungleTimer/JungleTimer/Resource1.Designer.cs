//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JungleTimer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("JungleTimer.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to League of Legends Jungle Timer
        ///Version 1.0.0.1
        ///By Jieyi Hu
        ///All rights reserved..
        /// </summary>
        internal static string about_info {
            get {
                return ResourceManager.GetString("about_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1. Press Start/Stop when the game starts to time all the camps.
        ///2. Press Stop/Start to stop and reset timers for all the camps.
        ///3. Press Pause/Resume to pause or resume all the timers during the game.(for pause during custom game)
        ///4. Press Map On/Off to turn on or off the map background.
        ///5. Press Show Min/Sec to choose display time in minutes or seconds.
        ///6. Press Mode to switch window mode.
        ///7. Press 5 Sec -&gt;/&lt;- adjust all the timers 5 seconds forward or backward..
        /// </summary>
        internal static string help_info {
            get {
                return ResourceManager.GetString("help_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ********************************************
        ///Indicators:
        ///Line 1 - Game Time
        ///Line 2 - Blue Side Blue CountDown
        ///Line 3 - Blue Side Red CountDown
        ///Line 4 - Purple Side Blue CountDown
        ///Line 5 - Purple Side Red CountDown
        ///Line 6 - Dragon
        ///Line 7 - Baron
        ///********************************************
        ///Controls
        ///1. Press Shift+S to start/stop and reset all the timers.
        ///2. Press Shift+A to pause all the timers.
        ///3. Press &quot;.&quot;/&quot;,&quot; to adjust all the timers 1 seconds forward or backward.
        ///4. Press Shift+F to choose  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_info_hanger {
            get {
                return ResourceManager.GetString("help_info_hanger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon ICON {
            get {
                object obj = ResourceManager.GetObject("ICON", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream Live {
            get {
                return ResourceManager.GetStream("Live", resourceCulture);
            }
        }
    }
}
